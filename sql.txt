CREATE TABLE mitarbeiter (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    position VARCHAR(255) NOT NULL
);

CREATE TABLE getraenke (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    preis INT NOT NULL
);

CREATE TABLE position (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE config (
    id INT AUTO_INCREMENT PRIMARY KEY,
    bezeichnung VARCHAR(255) NOT NULL
);

CREATE TABLE dancer_service (
    id INT AUTO_INCREMENT PRIMARY KEY,
    service VARCHAR(255) NOT NULL,
    preis INT NOT NULL
);

CREATE TABLE dancer_bookings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    kunde VARCHAR(255) NOT NULL,
    service_id INT NOT NULL,
    anzahl INT NOT NULL,
    mitarbeiter_id INT NOT NULL,
    zusatz_gaeste_id INT NOT NULL,
    zusatz_kosten_id INT NOT NULL,
    KW_id INT NOT NULL,
    startzeit DATETIME NOT NULL,
    endzeit DATETIME NOT NULL,
    FOREIGN KEY (service_id) REFERENCES dancer_service(id),
    FOREIGN KEY (mitarbeiter_id) REFERENCES mitarbeiter(id),
    FOREIGN KEY (zusatz_gaeste_id) REFERENCES counter(id),
    FOREIGN KEY (zusatz_kosten_id) REFERENCES dancer_service_zu_kosten(id)
);
CREATE TABLE verkaeufe (
    id INT AUTO_INCREMENT PRIMARY KEY,
    kunde VARCHAR(255) NOT NULL,
    getraenk_id INT NOT NULL,
    menge INT NOT NULL,
    mitarbeiter_id INT NOT NULL,
    KW_id INT NOT NULL,
    datum TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (getraenk_id) REFERENCES getraenke(id),
    FOREIGN KEY (mitarbeiter_id) REFERENCES mitarbeiter(id)
);


CREATE TABLE photoshots (
    id INT AUTO_INCREMENT PRIMARY KEY,
    kunde VARCHAR(255) NOT NULL,
    vip BOOL FALSE,
    art_id INT NOT NULL,
    zusatz_gast_id INT NOT NULL,
    zusatz_kosten_id INT NOT NULL;
    mitarbeiter_id INT NOT NULL,
    KW_id INT NOT NULL,
    datum TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (mitarbeiter_id) REFERENCES mitarbeiter(id)
    
);

CREATE TABLE photo_service_art (
    id INT AUTO_INCREMENT PRIMARY KEY,
    art VARCHAR(255) NOT NULL,
    preis INT NOT NULL
);

CREATE TABLE counter (
    id INT AUTO_INCREMENT PRIMARY KEY,
    bezeichnung VARCHAR(255) NOT NULL,
    counter INT NOT NULL
);

CREATE TABLE photo_service_zu_kosten (
    id INT AUTO_INCREMENT PRIMARY KEY,
    bezeichnung VARCHAR(255) NOT NULL,
    preis INT NOT NULL
);

CREATE TABLE dancer_service_zu_kosten (
    id INT AUTO_INCREMENT PRIMARY KEY,
    bezeichnung VARCHAR(255) NOT NULL,
    preis INT NOT NULL
);

CREATE TABLE security_position (
    id INT AUTO_INCREMENT PRIMARY KEY,
    bezeichnung VARCHAR(255) NOT NULL
);

CREATE TABLE security_einteilung (
    id INT AUTO_INCREMENT PRIMARY KEY,
    mitarbeiter_id INT NOT NULL,
    kw_id INT NOT NULL,
    stunde TIME NOT NULL,
    aktiv BOOLEAN DEFAULT FALSE,
    position_id INT DEFAULT NULL,
    FOREIGN KEY (mitarbeiter_id) REFERENCES mitarbeiter(id),
    FOREIGN KEY (position_id) REFERENCES security_position(id);
);

CREATE TABLE benutzer (
    id INT AUTO_INCREMENT PRIMARY KEY,
    benutzername VARCHAR(50) UNIQUE NOT NULL,
	email VARCHAR(100) UNIQUE NOT NULL,
    passwort_hash VARCHAR(255) NOT NULL,
    rolle ENUM('user', 'editor', 'admin') NOT NULL
);
